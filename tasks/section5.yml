---
- name: "SCORED | 5.1.1 | Ensure cron daemon is enabled"
  systemd:
    name: crond
    state: started
    enabled: yes
  when:
    - rhel7cis_rule_5_1_1
  tags:
    - rule_5.1.1

- name: "SCORED | 5.1.2 | Ensure permissions on /etc/crontab are configured\n
         SCORED | 5.1.3 | Ensure permissions on /etc/cron.hourly are configured\n
         SCORED | 5.1.4 | Ensure permissions on /etc/cron.daily are configured\n
         SCORED | 5.1.5 | Ensure permissions on /etc/cron.weekly are configured\n
         SCORED | 5.1.6 | Ensure permissions on /etc/cron.monthly are configured\n
         SCORED | 5.1.7 | Ensure permissions on /etc/cron.d are configured"
  file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: 0600
  loop:
    - /etc/crontab
    - /etc/cron.hourly
    - /etc/cron.daily
    - /etc/cron.weekly
    - /etc/cron.monthly
    - /etc/cron.d
  when:
    - rhel7cis_rule_5_1_2
    - rhel7cis_rule_5_1_3
    - rhel7cis_rule_5_1_4
    - rhel7cis_rule_5_1_5
    - rhel7cis_rule_5_1_6
    - rhel7cis_rule_5_1_7
  tags:
    - rule_5.1.2
    - rule_5.1.3
    - rule_5.1.4
    - rule_5.1.5
    - rule_5.1.6
    - rule_5.1.7

- block:
    - name: "SCORED | 5.1.8 | Ensure at/cron is restricted to authorized users"
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/at.deny
        - /etc/cron.deny

    - name: "SCORED | 5.1.8 | Ensure at/cron is restricted to authorized users"
      file:
        path: "{{ item }}"
        owner: root
        group: root
        mode: 0600
        state: touch
      loop:
        - /etc/at.allow
        - /etc/cron.allow
  when:
    - rhel7cis_rule_5_1_8
  tags:
    - rule_5.1.8

- name: "SCORED | 5.2.1 | Ensure permissions on /etc/ssh/sshd_config are configured\n
         SCORED | 5.2.2 | Ensure SSH Protocol is set to 2\n
         SCORED | 5.2.3 | Ensure SSH LogLevel is set to INFO\n
         SCORED | 5.2.4 | Ensure SSH X11 forwarding is disabled\n
         SCORED | 5.2.5 | Ensure SSH MaxAuthTries is set to 4 or less\n
         SCORED | 5.2.6 | Ensure SSH IgnoreRhosts is enabled\n
         SCORED | 5.2.7 | Ensure SSH HostbasedAuthentication is disabled\n
         SCORED | 5.2.8 | Ensure SSH root login is disabled\n
         SCORED | 5.2.9 | Ensure SSH PermitEmptyPasswords is disabled\n
         SCORED | 5.2.10 | Ensure SSH PermitUserEnvironment is disabled\n
         SCORED | 5.2.11 | Ensure only approved MAC algorithms are used\n
         SCORED | 5.2.12 | Ensure SSH Idle Timeout Interval is configured\n
         SCORED | 5.2.13 | Ensure SSH LoginGraceTime is set to one minute or less\n
         SCORED | 5.2.14 | Ensure SSH access is limited - allowusers\n
         SCORED | 5.2.15 | Ensure SSH warning banner is configured"
  template:
    src: etc/ssh/sshd_config
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: 0600
    backup: yes
  notify: restart sshd
  when:
    - rhel7cis_rule_5_2_1
    - rhel7cis_rule_5_2_2
    - rhel7cis_rule_5_2_3
    - rhel7cis_rule_5_2_4
    - rhel7cis_rule_5_2_5
    - rhel7cis_rule_5_2_6
    - rhel7cis_rule_5_2_7
    - rhel7cis_rule_5_2_8
    - rhel7cis_rule_5_2_9
    - rhel7cis_rule_5_2_10
    - rhel7cis_rule_5_2_11
    - rhel7cis_rule_5_2_12
    - rhel7cis_rule_5_2_13
    - rhel7cis_rule_5_2_14
    - rhel7cis_rule_5_2_15
  tags:
    - rule_5.2.1
    - rule_5.2.2
    - rule_5.2.3
    - rule_5.2.4
    - rule_5.2.5
    - rule_5.2.6
    - rule_5.2.7
    - rule_5.2.8
    - rule_5.2.9
    - rule_5.2.10
    - rule_5.2.11
    - rule_5.2.12
    - rule_5.2.13
    - rule_5.2.14
    - rule_5.2.15

- block:
    - name: "SCORED | 5.3.1 | Ensure password creation requirements are configured"
      pamd:
        name: "{{ item }}"
        type: password
        control: requisite
        module_path: pam_pwquality.so
        module_arguments: "try_first_pass retry=3"
      loop:
        - password-auth-ac
        - system-auth-ac

    - name: "SCORED | 5.3.1 | Ensure password creation requirements are configured"
      lineinfile:
        path: /etc/security/pwquality.conf
        regexp: '^{{ item.key }}'
        line: '{{ item.key }} = {{ item.value }}'
        backup: yes
      loop:
        - { key: 'minlen',  value: '17' }
        - { key: 'dcredit', value: '-1' }
        - { key: 'ucredit', value: '-1' }
        - { key: 'ocredit', value: '-1' }
        - { key: 'lcredit', value: '-1' }
  when:
    - rhel7cis_rule_5_3_1
  tags:
    - rule_5.3.1

- block:
    - name: "SCORED | 5.3.2 | Ensure lockout for failed password attempts is configured"
      pamd:
        name: "{{ item }}"
        type: auth
        control: required
        module_path: pam_faillock.so
        module_arguments: "preauth audit silent deny=5 unlock_time=900"
      loop:
        - password-auth-ac
        - system-auth-ac

    - name: "SCORED | 5.3.2 | Ensure lockout for failed password attempts is configured"
      pamd:
        name: "{{ item }}"
        type: auth
        control: "[success=1 default=bad]"
        module_path: pam_unix.so
      loop:
        - password-auth-ac
        - system-auth-ac

    - name: "SCORED | 5.3.2 | Ensure lockout for failed password attempts is configured"
      pamd:
        name: "{{ item }}"
        type: auth
        control: "[default=die]"
        module_path: pam_faillock.so
        module_arguments: "authfail audit deny=5 unlock_time=900"
      loop:
        - password-auth-ac
        - system-auth-ac

    - name: "SCORED | 5.3.2 | Ensure lockout for failed password attempts is configured"
      pamd:
        name: "{{ item }}"
        type: auth
        control: sufficient
        module_path: pam_faillock.so
        module_arguments: "authsucc audit silent deny=5 unlock_time=900"
      loop:
        - password-auth-ac
        - system-auth-ac
  when:
    - rhel7cis_rule_5_3_2
  tags:
    - rule_5.3.2

- name: "SCORED | 5.3.3 | Ensure password reuse is limited\n
         SCORED | 5.3.4 | Ensure password hashing algorithm is SHA-512"
  pamd:
    name: "{{ item }}"
    type: password
    control: sufficient
    module_path: pam_unix.so
    module_arguments: "sha512 shadow nullok try_first_pass use_authtok remember=24"
  loop:
    - password-auth-ac
    - system-auth-ac
  when:
    - rhel7cis_rule_5_3_3
    - rhel7cis_rule_5_3_4
  tags:
    - rule_5.3.3
    - rule_5_3_4

- name: "SCORED | 5.4.1.1 | Ensure password expiration is 90 days or lessi\n
         SCORED | 5.4.1.2 | Ensure minimum days between password changes is 7 or more\n
         SCORED | 5.4.1.3 | Ensure password expiration warning days is 7 or more"
  lineinfile:
    path: /etc/login.defs
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: yes
  loop:
    - { regexp: "^PASS_MAX_DAYS", line: "PASS_MAX_DAYS {{ rhel7cis_max_days }}" }
    - { regexp: "^PASS_MIN_DAYS", line: "PASS_MIN_DAYS {{ rhel7cis_min_days }}" }
    - { regexp: "^PASS_WARN_AGE", line: "PASS_WARN_AGE {{ rhel7cis_warn_age }}" }
  when:
    - rhel7cis_rule_5_4_1_1
    - rhel7cis_rule_5_4_1_2
    - rhel7cis_rule_5_4_1_3
  tags:
    - rule_5.4.1.1
    - rule_5.4.1.2
    - rule_5.4.1.3

- name: "SCORED | 5.4.1.4 | Ensure inactive password lock is 30 days or less"
  lineinfile:
    path: /etc/default/useradd
    regexp: '^INACTIVE'
    line: "INACTIVE=30"
  when:
    - rhel7cis_rule_5_4_1_4
  tags:
    - rule_5.4.1.4

- name: "SCORED | 5.4.1.5 | Ensure all users last password change date is in the past"
  shell: "for USER in $(cat /etc/passwd | cut -d: -f1); do PWCHANGE=$(chage -l $USER | grep 'Last password change' | awk -F ': ' '{print $2}'); if [ \"$PWCHANGE\" == \"password must be changed\" ]; then continue; fi; DATE=$(date -d \"$PWCHANGE\" +%s); NOW=$(date +%s); if [ $DATE -gt $NOW ]; then passwd --expire $USER; fi; done"
  register: pass_change_date
  changed_when: pass_change_date.stdout != ""
  failed_when: pass_change_date.stderr != ""
  when:
    - rhel7cis_rule_5_4_1_5
  tags:
    - rule_5.4.1.5

- name: "SCORED | 5.4.2 | Ensure system accounts are non-login"
  shell: "for USER in $(awk -F: '$3 < 1000 { print $1 }' /etc/passwd); do if [ $USER != \"root\" ]; then usermod -L $USER &> /dev/null; if [ $USER != \"git\" ] && [ $USER != \"sshmgr\" ] && [ $USER != \"sync\" ] && [ $USER != \"shutdown\" ] && [ $USER != \"halt\" ]; then usermod -s /sbin/nologin $USER &> /dev/null; fi; fi; done"
  register: system_user_login
  changed_when: system_user_login.stdout != ""
  failed_when: system_user_login.stderr != ""
  when:
    - rhel7cis_rule_5_4_2
  tags:
    - rule_5.4.2

- name: "SCORED | 5.4.3 | Ensure default group for the root account is GID 0"
  user:
    name: root
    group: root
  when:
    - rhel7cis_rule_5_4_3
  tags:
    - rule_5.4.3

- name: "SCORED | 5.4.4 | Ensure default user umask is 027 or more restrictive"
  replace:
    path: "{{ item }}"
    regexp: '(^\s*umask)(.*)$'
    replace: '\1 027'
    backup: yes
  loop:
    - /etc/bashrc
    - /etc/profile
    - /etc/csh.cshrc
  when:
    - rhel7cis_rule_5_4_4
  tags:
    - rule_5.4.4

- name: "SCORED | 5.4.5 | Ensure default user shell timeout is 900 seconds or less"
  blockinfile:
    path: "{{ item }}"
    block: |
      if [[ -z $TMOUT ]];
        then export TMOUT=600;
        readonly TMOUT;
      fi
    backup: yes
  loop:
    - /etc/bashrc
    - /etc/profile
  when:
    - rhel7cis_rule_5_4_5
  tags:
    - rule_5.4.5

- name: "NOTSCORED | 5.5 | Ensure root login is restricted to system console"
  copy:
    src: etc/securetty
    dest: /etc/securetty
    owner: root
    group: root
    mode: 0600
    backup: yes
  when:
    - rhel7cis_rule_5_5
  tags:
    - rule_5.5

- block:
    - name: "SCORED | 5.6 | Ensure access to the su command is restricted"
      pamd:
        name: /etc/pam.d/su
        type: auth
        control: required
        module_path: pam_wheel.so
        module_arguments: "use_uid"

    - name: "SCORED | 5.6 | Ensure access to the su command is restricted"
      user:
        name: root
        groups: wheel
  when:
    - rhel7cis_rule_5_6
  tags:
    - rule_5.6
