- name: "NOTSCORED | 6.1.1 | Audit system file permissions"
  command: /bin/true
  changed_when: no
  when:
    - rhel7cis_rule_6_1_1
  tags:
    - rule_6.1.1

- name: "SCORED | 6.1.2 | Ensure permissions on /etc/passwd are configured"
  file:
    path: /etc/passwd
    owner: root
    group: root
    mode: 0644
  when:
    - rhel7cis_rule_6_1_2
  tags:
    - rule_6.1.2

- name: "SCORED | 6.1.3 | Ensure permissions on /etc/shadow are configured"
  file:
    path: /etc/shadow
    owner: root
    group: root
    mode: 0000
  when:
    - rhel7cis_rule_6_1_3
  tags:
    - rule_6.1.3

- name: "SCORED | 6.1.4 | Ensure permissions on /etc/group are configured"
  file:
    path: /etc/group
    owner: root
    group: root
    mode: 0644
  when:
    - rhel7cis_rule_6_1_4
  tags:
    - rule_6.1.4

- name: "SCORED | 6.1.5 | Ensure permissions on /etc/gshadow are configured"
  file:
    path: /etc/gshadow
    owner: root
    group: root
    mode: 0000
  when:
    - rhel7cis_rule_6_1_5
  tags:
    - rule_6.1.5

- name: "SCORED | 6.1.6 | Ensure permissions on /etc/passwd- are configured"
  file:
    path: /etc/passwd-
    owner: root
    group: root
    mode: 0644
  when:
    - rhel7cis_rule_6_1_6
  tags:
    - rule_6.1.6

- name: "SCORED | 6.1.7 | Ensure permissions on /etc/shadow- are configured"
  file:
    path: /etc/shadow-
    owner: root
    group: root
    mode: 0000
  when:
    - rhel7cis_rule_6_1_7
  tags:
    - rule_6.1.7

- name: "SCORED | 6.1.8 | Ensure permissions on /etc/group- are configured"
  file:
    path: /etc/group-
    owner: root
    group: root
    mode: 0600
  when:
    - rhel7cis_rule_6_1_8
  tags:
    - rule_6.1.8

- name: "SCORED | 6.1.9 | Ensure permissions on /etc/gshadow- are configured"
  file:
    path: /etc/gshadow-
    owner: root
    group: root
    mode: 0000
  when:
    - rhel7cis_rule_6_1_9
  tags:
    - rule_6.1.9

- name: "SCORED | 6.1.10 | Ensure no world writable files exist"
  shell: "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002"
  changed_when: no
  ignore_errors: yes
  when:
    - rhel7cis_rule_6_1_10
  tags:
    - rule_6.1.10

- name: "SCORED | 6.1.11 | Ensure no unowned files or directories exist"
  shell: "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nouser"
  changed_when: no
  ignore_errors: yes

  when:
    - rhel7cis_rule_6_1_11
  tags:
    - rule_6.1.11

- name: "SCORED | 6.1.12 | Ensure no ungrouped files or directories exist"
  shell: "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nogroup"
  changed_when: no
  ignore_errors: yes
  when:
    - rhel7cis_rule_6_1_12
  tags:
    - rule_6.1.12

- name: "NOTSCORED | 6.1.13 | Audit SUID executables"
  shell: "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -4000 | egrep -v 'bin/su|bin/ksu|polkit-1/polkit-agent-helper|bin/fusermount|bin/passwd|bin/chfn|bin/umount|bin/pkexec|bin/newgrp|bin/crontab|bin/chage|bin/mount|bin/chsh|bin/gpasswd|nagios/plugins/check_ide_smart|nagios/plugins/check_fping|nagios/plugins/check_dhcp|nagios/plugins/check_icmp|sbin/usernetctl|sbin/unix_chkpwd|sbin/pam_timestamp_check|sbin/userhelper|dbus-1/dbus-daemon-launch-helper|sssd/ldap_child|sssd/krb5_child|sssd/selinux_child|sssd/proxy_child|cockpit-session|bin/casrvc'"
  register: fail
  changed_when: no
  failed_when: fail.stdout != "" or fail.stderr != ""
  ignore_errors: yes
  when:
    - rhel7cis_rule_6_1_13
  tags:
    - rule_6.1.13

- name: "NOTSCORED | 6.1.14 | Audit SGID executables"
  shell: "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -2000 | egrep -v 'bin/wall|bin/screen|bin/ssh-agent|bin/write|sbin/postqueue|sbin/postdrop|sbin/netreport|utempter/utempter|openssh/ssh-keysign|usr/bin/locate'"
  register: fail
  changed_when: no
  failed_when: fail.stdout != "" or fail.stderr != ""
  ignore_errors: yes
  when:
    - rhel7cis_rule_6_1_14
  tags:
    - rule_6.1.14

- name: "SCORED | 6.2.1 | Ensure password fields are not empty"
  user:
    name: "{{ item }}"
    password_lock: yes
  loop:
    - "{{ empty_password_accounts.stdout_lines }}"
  when:
    - empty_password_accounts.rc
    - rhel7cis_rule_6_2_1
  tags:
    - rule_6.2.1

- name: "SCORED | 6.2.2 | Ensure no legacy '+' entries exist in /etc/passwd\n
         SCORED | 6.2.3 | Ensure no legacy '+' entries exist in /etc/shadow\n
         SCORED | 6.2.4 | Ensure no legacy '+' entries exist in /etc/group"
  lineinfile:
    path: "{{ item }}"
    regexp: '^\+'
    state: absent
    backup: yes
  loop:
    - /etc/passwd
    - /etc/shadow
    - /etc/group
  when:
    - rhel7cis_rule_6_2_2
    - rhel7cis_rule_6_2_3
    - rhel7cis_rule_6_2_4
  tags:
    - rule_6.2.2
    - rule_6.2.3
    - rule_6.2.4

- block:
    - name: "SCORED | 6.2.5 | Ensure root is the only UID 0 account"
      group:
        name: "{{ item }}"
      loop:
        - "{{ uid_zero_accounts_except_root.stdout_lines }}"

    - name: "SCORED | 6.2.5 | Ensure root is the only UID 0 account"
      user:
        name: "{{ item }}"
        group: "{{ item }}"
      loop:
        - "{{ uid_zero_accounts_except_root.stdout_lines }}"
  when:
    - uid_zero_accounts_except_root.rc
    - rhel7cis_rule_6_2_5
  tags:
    - rule_6.2.5

- name: "SCORED | 6.2.6 | Ensure root PATH Integrity"
  shell: "if [ \"`echo $PATH | grep ::`\" != \"\" ]; then echo \"Empty Directory in PATH (::)\"; fi; if [ \"`echo $PATH | grep :$`\" != \"\" ]; then echo \"Trailing : in PATH\"; fi; p=`echo $PATH | sed -e 's/::/:/' -e 's/:$//' -e 's/:/ /g'`; set -- $p; while [ \"$1\" != \"\" ]; do if [ \"$1\" = \".\" ]; then echo \"PATH contains .\"; shift; continue; fi; if [ -d $1 ]; then dirperm=`ls -ldH $1 | cut -f1 -d\" \"`; if [ `echo $dirperm | cut -c6` != \"-\" ]; then echo \"Group Write permission set on directory $1\"; fi; if [ `echo $dirperm | cut -c9` != \"-\" ]; then echo \"Other Write permission set on directory $1\"; fi; dirown=`ls -ldH $1 | awk '{print $3}'`; if [ \"$dirown\" != \"root\" ] ; then echo $1 is not owned by root; fi; else echo $1 is not a directory; fi; shift; done"
  changed_when: no
  ignore_errors: yes
  when:
    - rhel7cis_rule_6_2_6
  tags:
    - rule_6.2.6

- name: "SCORED | 6.2.7 | Ensure all users' home directories exist"
  shell: "cat /etc/passwd | egrep -v '^(root|halt|sync|shutdown)' | awk -F: '($7 != \"/sbin/nologin\" && $7 != \"/bin/false\") { print $1 \" \" $6 }' | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\"; fi; done"
  changed_when: no
  ignore_errors: yes
  when:
    - rhel7cis_rule_6_2_7
  tags:
    - rule_6.2.7

- name: "SCORED | 6.2.8 | Ensure users' home directories permissions are 750 or more restrictive"
  shell: "cat /etc/passwd | egrep -v '^(root|halt|sync|shutdown)' | awk -F: '($7 != \"/sbin/nologin\" && $7 != \"/bin/false\") { print $1 \" \" $6 }' | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\"; else dirperm=`ls -ld $dir | cut -f1 -d\" \"`; if [ `echo $dirperm | cut -c6` != \"-\" ]; then echo \"Group Write permission set on the home directory ($dir) of user $user\"; fi; if [ `echo $dirperm | cut -c8` != \"-\" ]; then echo \"Other Read permission set on the home directory ($dir) of user $user\"; fi; if [ `echo $dirperm | cut -c9` != \"-\" ]; then echo \"Other Write permission set on the home directory ($dir) of user $user\"; fi; if [ `echo $dirperm | cut -c10` != \"-\" ]; then echo \"Other Execute permission set on the home directory ($dir) of user $user\"; fi; fi; done"
  changed_when: no
  ignore_errors: yes
  when:
    - rhel7cis_rule_6_2_8
  tags:
    - rule_6.2.8

- name: "SCORED | 6.2.9 | Ensure users own their home directories"
  shell: " cat /etc/passwd | egrep -v '^(root|halt|sync|shutdown)' | awk -F: '($7 != \"/sbin/nologin\" && $7 != \"/bin/false\") { print $1 \" \" $6 }' | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\"; else owner=$(stat -L -c \"%U\" \"$dir\"); if [ \"$owner\" != \"$user\" ]; then echo \"The home directory ($dir) of user $user is owned by $owner.\"; fi; fi; done"
  changed_when: no
  ignore_errors: yes
  when:
    - rhel7cis_rule_6_2_9
  tags:
    - rule_6.2.9

- name: "SCORED | 6.2.10 | Ensure users dot files are not group or world writable"
  shell: "cat /etc/passwd | egrep -v '^(root|halt|sync|shutdown)' | awk -F: '($7 != \"/sbin/nologin\" && $7 != \"/bin/false\") { print $1 \" \" $6 }' | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\"; else for file in $dir/.[A-Za-z0-9]*; do if [ ! -h \"$file\" -a -f \"$file\" ]; then fileperm=`ls -ld $file | cut -f1 -d\" \"`; if [ `echo $fileperm | cut -c6` != \"-\" ]; then echo \"Group Write permission set on file $file\"; fi; if [ `echo $fileperm | cut -c9` != \"-\" ]; then echo \"Other Write permission set on file $file\"; fi; fi; done; fi; done"
  changed_when: no
  ignore_errors: yes
  when:
    - rhel7cis_rule_6_2_10
  tags:
    - rule_6.2.10

- name: "SCORED | 6.2.11 | Ensure no users have .forward files"
  file:
    dest: "~{{ item }}/.forward"
    state: absent
  loop:
    - "{{ users.stdout_lines }}"
  when:
    - rhel7cis_rule_6_2_11
  tags:
    - rule_6.2.11

- name: "SCORED | 6.2.12 | Ensure no users have .netrc files\n
         SCORED | 6.2.13 | Ensure users' .netrc Files are not group or world accessible"
  file:
    dest: "~{{ item }}/.netrc"
    state: absent
  loop:
    - "{{ users.stdout_lines }}"
  when:
    - rhel7cis_rule_6_2_12
    - rhel7cis_rule_6_2_13
  tags:
    - rule_6.2.12
    - rule_6.2.13

- name: "SCORED | 6.2.14 | Ensure no users have .rhosts files"
  file:
    dest: "~{{ item }}/.rhosts"
    state: absent
  loop:
    - "{{ users.stdout_lines }}"
  when:
    - rhel7cis_rule_6_2_14
  tags:
    - rule_6.2.14

- name: "SCORED | 6.2.15 | Ensure all groups in /etc/passwd exist in /etc/group"
  shell: "for i in $(cut -s -d: -f4 /etc/passwd | sort -u ); do grep -q -P \"^.*?:[^:]*:$i:\" /etc/group; if [ $? -ne 0 ]; then echo \"Group $i is referenced by /etc/passwd but does not exist in /etc/group\"; fi; done"
  changed_when: no
  ignore_errors: yes
  when:
    - rhel7cis_rule_6_2_15
  tags:
    - rule_6.2.15

- name: "SCORED | 6.2.16 | Ensure no duplicate UIDs exist"
  shell: "cat /etc/passwd | cut -f3 -d\":\" | sort -n | uniq -c | while read x ; do [ -z \"${x}\" ] && break; set - $x; if [ $1 -gt 1 ]; then users=`awk -F: '($3 == n) { print $1 }' n=$2 /etc/passwd | xargs`; echo \"Duplicate UID ($2): ${users}\"; fi; done"
  changed_when: no
  ignore_errors: yes
  when:
    - rhel7cis_rule_6_2_16
  tags:
    - rule_6.2.16

- name: "SCORED | 6.2.17 | Ensure no duplicate GIDs exist"
  shell: "cat /etc/group | cut -f3 -d\":\" | sort -n | uniq -c | while read x ; do [ -z \"${x}\" ] && break; set - $x; if [ $1 -gt 1 ]; then groups=`awk -F: '($3 == n) { print $1 }' n=$2 /etc/group | xargs`; echo \"Duplicate GID ($2): ${groups}\"; fi; done"
  changed_when: no
  ignore_errors: yes
  when:
    - rhel7cis_rule_6_2_17
  tags:
    - rule_6.2.17

- name: "SCORED | 6.2.18 | Ensure no duplicate user names exist"
  shell: "cat /etc/passwd | cut -f1 -d\":\" | sort -n | uniq -c | while read x ; do [ -z \"${x}\" ] && break; set - $x; if [ $1 -gt 1 ]; then uids=`awk -F: '($1 == n) { print $3 }' n=$2 /etc/passwd | xargs`; echo \"Duplicate User Name ($2): ${uids}\"; fi; done"
  changed_when: no
  ignore_errors: yes
  when:
    - rhel7cis_rule_6_2_18
  tags:
    - rule_6.2.18

- name: "SCORED | 6.2.19 | Ensure no duplicate group names exist"
  shell: "cat /etc/group | cut -f1 -d\":\" | sort -n | uniq -c | while read x ; do [ -z \"${x}\" ] && break; set - $x; if [ $1 -gt 1 ]; then gids=`gawk -F: '($1 == n) { print $3 }' n=$2 /etc/group | xargs`; echo \"Duplicate Group Name ($2): ${gids}\"; fi; done"
  changed_when: no
  ignore_errors: yes
  when:
    - rhel7cis_rule_6_2_19
  tags:
    - rule_6.2.19
